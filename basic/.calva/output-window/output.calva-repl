; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/yan.pereira/github/yan/clojure-playground/basic; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/yan.pereira/github/yan/clojure-playground/basic; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/yan.pereira/github/yan/clojure-playground/basic; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:56586 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
; Execution error (FileNotFoundException) at user/eval8974 (REPL:56).
; Could not locate clojure/tools/namespace/repl__init.class, clojure/tools/namespace/repl.clj or clojure/tools/namespace/repl.cljc on classpath.
clj꞉user꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(list (1 2 3 4))
; Execution error (ClassCastException) at user/eval9949 (REPL:66).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉user꞉> 
(def meu-vetor [1 2 3 4])
#'user/meu-vetor
clj꞉user꞉> meu-vetor
[1 2 3 4]
clj꞉user꞉> 
(map meu-vetor #(* % 2))
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:557).
; Don't know how to create ISeq from: user$eval10262$fn__10263
clj꞉user꞉> 
(map #(* % 2) meu-vetor)
(2 4 6 8)
clj꞉user꞉> 
(ns basic.vectors)
nil
clj꞉basic.vectors꞉> 
(def meu-vetor [1 2 3 4])
#'basic.vectors/meu-vetor
clj꞉basic.vectors꞉> 
(count-vector-values meu-vetor)
; Syntax error compiling at (.calva/output-window/output.calva-repl:88:1).
; Unable to resolve symbol: count-vector-values in this context
clj꞉basic.vectors꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/yan.pereira/github/yan/clojure-playground/basic; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:58553 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating (ns basic.vectors)ode from settings: 'calva.autoEvaluateCode.onConnect.clj'
; Execution error (FileNotFoundException) at user/eval8974 (REPL:102).
; Could not locate clojure/tools/namespace/repl__init.class, clojure/tools/namespace/repl.clj or clojure/tools/namespace/repl.cljc on classpath.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
(ns basic.vectors)
nil
clj꞉basic.vectors꞉> 
(filter-even-numbers meu-vetor)\
; Syntax error compiling at (.calva/output-window/output.calva-repl:112:1).
; Unable to resolve symbol: filter-even-numbers in this context
clj꞉basic.vectors꞉> 
meu-vetor
; Syntax error compiling at (.calva/output-window/output.calva-repl:0:0).
; Unable to resolve symbol: meu-vetor in this context
clj꞉basic.vectors꞉> 
(filter-even-numbers [1 2 3 4 5 6 7 8 9 10])
; Syntax error compiling at (.calva/output-window/output.calva-repl:120:1).
; Unable to resolve symbol: filter-even-numbers in this context
clj꞉basic.vectors꞉> 
